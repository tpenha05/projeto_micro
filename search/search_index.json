{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Exerc\u00edcios Microsservi\u00e7os - 2025.1","text":"<p>Aluno: Thiago Penha Pinheiro da Costa</p>"},{"location":"apresentacao/","title":"Apresenta\u00e7\u00e3o","text":""},{"location":"apresentacao/#repositorio","title":"Reposit\u00f3rio","text":"<p>GitHub do Projeto</p>"},{"location":"apresentacao/#video","title":"V\u00eddeo","text":"<p>Link do v\u00eddeo de apresenta\u00e7\u00e3o</p>"},{"location":"apresentacao/#demonstracao","title":"Demonstra\u00e7\u00e3o","text":"<p>Acesse via: <code>http://localhost:8000/docs</code> para ver a documenta\u00e7\u00e3o interativa via Swagger gerado pelo FastAPI.</p>"},{"location":"jenkins_apresentacao/","title":"Apresenta\u00e7\u00e3o","text":""},{"location":"jenkins_apresentacao/#repositorio","title":"Reposit\u00f3rio","text":"<p>GitHub do Projeto com Pipelines</p>"},{"location":"jenkins_apresentacao/#demonstracao","title":"Demonstra\u00e7\u00e3o","text":"<p>Exemplo do Jenkinsfile (<code>account-service</code>):</p> <pre><code>pipeline {\n    agent any\n    tools {\n        maven 'maven-3'\n        jdk 'jdk-21'\n    }\n    environment {\n        SERVICE = 'account'\n        NAME = \"tpenha05/${env.SERVICE}\"\n        REGISTRY_CREDENTIALS = 'dockerhub-credentials'\n    }\n    stages {\n        stage('Checkout Dependencies') {\n            steps {\n                script {\n                    dir('libs/account') {\n                        git branch: 'main', url: 'https://github.com/tpenha05/store-account.git'\n                        sh 'mvn clean install -DskipTests'\n                    }\n                }\n            }\n        }\n        stage('Build') { \n            steps {\n                sh 'mvn -B -DskipTests clean package'\n            }\n        }      \n        stage('Build &amp; Push Image') {\n            steps {\n                script {\n                    withCredentials([usernamePassword(credentialsId: env.REGISTRY_CREDENTIALS, \n                                                       usernameVariable: 'USERNAME', \n                                                       passwordVariable: 'TOKEN')]) {\n                        sh '''\n                            docker login -u $USERNAME -p $TOKEN\n                            docker build -t ${env.NAME}:latest .\n                            docker build -t ${env.NAME}:${env.BUILD_NUMBER} .\n                            docker push ${env.NAME}:latest\n                            docker push ${env.NAME}:${env.BUILD_NUMBER}\n                        '''\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"jenkins_projeto/","title":"Detalhes do Projeto - Jenkins Pipeline","text":""},{"location":"jenkins_projeto/#objetivo","title":"Objetivo","text":"<p>Automatizar o processo de CI/CD dos microservi\u00e7os da plataforma usando Jenkins.</p>"},{"location":"jenkins_projeto/#estrutura-do-projeto","title":"Estrutura do Projeto","text":"<pre><code>.\n\u251c\u2500\u2500 account\n\u2502   \u2514\u2500\u2500 Jenkinsfile\n\u251c\u2500\u2500 account-service\n\u2502   \u2514\u2500\u2500 Jenkinsfile\n\u251c\u2500\u2500 auth\n\u2502   \u2514\u2500\u2500 Jenkinsfile\n\u251c\u2500\u2500 auth-service\n\u2502   \u2514\u2500\u2500 Jenkinsfile\n\u251c\u2500\u2500 exchange\n\u2502   \u2514\u2500\u2500 Jenkinsfile\n\u251c\u2500\u2500 gateway-service\n\u2502   \u2514\u2500\u2500 Jenkinsfile\n\u251c\u2500\u2500 product-service\n\u2502   \u2514\u2500\u2500 Jenkinsfile\n\u251c\u2500\u2500 product\n\u2502   \u2514\u2500\u2500 Jenkinsfile\n\u251c\u2500\u2500 order\n\u2502   \u2514\u2500\u2500 Jenkinsfile\n\u251c\u2500\u2500 order-service\n    \u2514\u2500\u2500 Jenkinsfile\n</code></pre>"},{"location":"jenkins_projeto/#arquitetura","title":"Arquitetura","text":"<p>Cada microservi\u00e7o possui um Jenkinsfile pr\u00f3prio que realiza:</p> <ul> <li>Checkout de depend\u00eancias (quando necess\u00e1rio)</li> <li>Build com Maven</li> <li>Build da imagem Docker</li> <li>Push da imagem para Docker Hub</li> <li>Deploy (impl\u00edcito via K8s YAMLs)</li> </ul> <p></p>"},{"location":"k8s_apresentacao/","title":"Apresenta\u00e7\u00e3o","text":""},{"location":"k8s_apresentacao/#repositorio","title":"Reposit\u00f3rio","text":"<p>GitHub com os YAMLs de K8s</p>"},{"location":"k8s_apresentacao/#demonstracao","title":"Demonstra\u00e7\u00e3o","text":"<p>Verificando servi\u00e7os ativos:</p> <pre><code>minikube start\nkubectl get pods -A\nkubectl get svc -A\n</code></pre>"},{"location":"k8s_projeto/","title":"Detalhes do Projeto - Kubernetes Minikube","text":""},{"location":"k8s_projeto/#objetivo","title":"Objetivo","text":"<p>Executar todos os microservi\u00e7os da plataforma em um \u00fanico cluster Kubernetes local usando Minikube.</p>"},{"location":"k8s_projeto/#estrutura-do-projeto","title":"Estrutura do Projeto","text":"<p>Os manifests est\u00e3o organizados por microservi\u00e7o:</p> <pre><code>k8s/\n\u251c\u2500\u2500 account-service/\n\u2502   \u2514\u2500\u2500 k8s.yaml\n\u251c\u2500\u2500 auth-service/\n\u2502   \u2514\u2500\u2500 k8s.yaml\n\u251c\u2500\u2500 gateway-service/\n\u2502   \u2514\u2500\u2500 k8s.yaml\n\u251c\u2500\u2500 product-service/\n\u2502   \u2514\u2500\u2500 k8s.yaml\n\u251c\u2500\u2500 order-service/\n\u2502   \u2514\u2500\u2500 k8s.yaml\n</code></pre>"},{"location":"k8s_projeto/#componentes-por-microservico","title":"Componentes por Microservi\u00e7o","text":"<p>Cada <code>k8s.yaml</code> cont\u00e9m:</p> <ul> <li>Secret (credenciais, tokens, senhas)</li> <li>ConfigMap (vari\u00e1veis de ambiente)</li> <li>Deployment (defini\u00e7\u00e3o do pod e imagem)</li> <li>Service (exposi\u00e7\u00e3o interna ou externa)</li> </ul>"},{"location":"k8s_projeto/#resultado","title":"Resultado","text":""},{"location":"k8s_projeto/#exemplo-de-comando-de-verificacao","title":"Exemplo de Comando de Verifica\u00e7\u00e3o","text":"<pre><code>minikube start\nkubectl get pods -A\nkubectl get services\n</code></pre>"},{"location":"order_apresentacao/","title":"Apresenta\u00e7\u00e3o","text":""},{"location":"order_apresentacao/#link-do-repositorio","title":"Link do Reposit\u00f3rio","text":"<p>GitHub do Order Service</p> <p>GitHub do Order</p>"},{"location":"order_apresentacao/#video","title":"V\u00eddeo","text":"<p>Assista \u00e0 apresenta\u00e7\u00e3o (2-3 min)</p>"},{"location":"order_apresentacao/#demonstracao","title":"Demonstra\u00e7\u00e3o","text":"<p>Exemplo de uso via Swagger:</p> <pre><code>http://localhost:8080/swagger-ui.html\n</code></pre>"},{"location":"order_projeto/","title":"Detalhes do Projeto - Order API","text":""},{"location":"order_projeto/#objetivo","title":"Objetivo","text":"<p>Permitir a cria\u00e7\u00e3o e consulta de pedidos por parte dos usu\u00e1rios autenticados.</p>"},{"location":"order_projeto/#arquitetura","title":"Arquitetura","text":"<ul> <li>A API faz parte da arquitetura de microsservi\u00e7os da plataforma.</li> <li>Comunica\u00e7\u00e3o entre Order Service e Product Service para obter detalhes do produto.</li> <li>Autentica\u00e7\u00e3o via JWT integrada com o Gateway e o Auth Service.</li> <li>Armazenamento de pedidos e itens de pedidos no banco de dados PostgreSQL.</li> </ul> <pre><code>request \u2192 gateway \u2192 account/auth \u2192 order \u2192 product \u2192 database\n</code></pre>"},{"location":"order_projeto/#endpoints","title":"Endpoints","text":""},{"location":"order_projeto/#post-order","title":"POST <code>/order</code>","text":"<p>Cria um novo pedido para o usu\u00e1rio atual.</p> <p>Request:</p> <pre><code>{\n    \"items\": [\n        { \"idProduct\": \"0195abfb-7074-73a9-9d26-b4b9fbaab0a8\", \"quantity\": 2 },\n        { \"idProduct\": \"0195abfe-e416-7052-be3b-27cdaf12a984\", \"quantity\": 1 }\n    ]\n}\n</code></pre>"},{"location":"order_projeto/#get-order","title":"GET <code>/order</code>","text":"<p>Retorna todos os pedidos do usu\u00e1rio atual.</p>"},{"location":"order_projeto/#get-orderid","title":"GET <code>/order/{id}</code>","text":"<p>Retorna os detalhes de um pedido. Se n\u00e3o pertencer ao usu\u00e1rio atual, retorna 404.</p>"},{"location":"order_projeto/#tecnologias","title":"Tecnologias","text":"<ul> <li>Spring Boot</li> <li>Spring Security</li> <li>Spring Data JPA</li> <li>PostgreSQL</li> <li>Swagger (SpringDoc)</li> <li>Docker</li> </ul>"},{"location":"product_apresentacao/","title":"Apresenta\u00e7\u00e3o","text":""},{"location":"product_apresentacao/#link-do-repositorio","title":"Link do Reposit\u00f3rio","text":"<p>GitHub do Product Service</p> <p>GitHub do Product</p>"},{"location":"product_apresentacao/#video","title":"V\u00eddeo","text":"<p>Assista \u00e0 apresenta\u00e7\u00e3o (2-3 min)</p>"},{"location":"product_apresentacao/#demonstracao","title":"Demonstra\u00e7\u00e3o","text":"<p>Exemplo de uso via Swagger dispon\u00edvel em:</p> <pre><code>http://localhost:8080/swagger-ui.html\n</code></pre>"},{"location":"product_projeto/","title":"Detalhes do Projeto - Product API","text":""},{"location":"product_projeto/#objetivo","title":"Objetivo","text":"<p>Criar uma API RESTful para controle de produtos com autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o.</p>"},{"location":"product_projeto/#arquitetura","title":"Arquitetura","text":""},{"location":"product_projeto/#frameworks-utilizados","title":"Frameworks Utilizados","text":"<ul> <li>Java 17</li> <li>Spring Boot</li> <li>Spring Security</li> <li>Spring Data JPA</li> <li>PostgreSQL</li> <li>Lombok</li> <li>Swagger (SpringDoc OpenAPI)</li> <li>Docker</li> </ul>"},{"location":"product_projeto/#endpoints","title":"Endpoints","text":""},{"location":"product_projeto/#post-product","title":"POST <code>/product</code>","text":"<p>Cria um novo produto. Requer papel <code>ADMIN</code>.</p> <p>Request:</p> <pre><code>{\n  \"name\": \"Tomato\",\n  \"price\": 10.12,\n  \"unit\": \"kg\"\n}\n</code></pre>"},{"location":"product_projeto/#get-product","title":"GET <code>/product</code>","text":"<p>Lista todos os produtos.</p>"},{"location":"product_projeto/#get-productid","title":"GET <code>/product/{id}</code>","text":"<p>Retorna um produto por ID.</p>"},{"location":"product_projeto/#delete-productid","title":"DELETE <code>/product/{id}</code>","text":"<p>Remove um produto por ID. Requer papel <code>ADMIN</code>.</p>"},{"location":"product_projeto/#extras-implementados","title":"Extras Implementados","text":"<ul> <li>Busca por nome (<code>GET /product?name=like</code>)</li> <li>Valida\u00e7\u00e3o com <code>@Valid</code></li> <li>Autentica\u00e7\u00e3o JWT via Spring Security</li> <li>Controle de acesso por role (<code>USER</code>, <code>ADMIN</code>)</li> <li>Swagger dispon\u00edvel em <code>/swagger-ui.html</code></li> </ul>"},{"location":"projeto/","title":"Detalhes do Projeto","text":""},{"location":"projeto/#objetivo","title":"Objetivo","text":"<p>Criar uma API REST usando FastAPI que permita a convers\u00e3o entre moedas, utilizando dados de terceiros, autentica\u00e7\u00e3o e gateway.</p>"},{"location":"projeto/#arquitetura","title":"Arquitetura","text":""},{"location":"projeto/#endpoint","title":"Endpoint","text":""},{"location":"projeto/#get-exchangefromto","title":"<code>GET /exchange/{from}/{to}</code>","text":"<p>Retorna as taxas de c\u00e2mbio entre duas moedas.</p> <p>Exemplo: <code>/exchange/USD/EUR</code></p> <p>Resposta:</p> <pre><code>{\n  \"from\": \"USD\",\n  \"to\": \"EUR\",\n  \"sell\": \"0.82\",\n  \"buy\": \"0.80\",\n  \"date\": \"2021-09-01 14:23:42\"\n}\n</code></pre>"}]}